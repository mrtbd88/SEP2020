<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="104945" started-at="2020-09-24T23:00:05Z" finished-at="2020-09-24T23:01:49Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="104945" started-at="2020-09-24T23:00:05Z" finished-at="2020-09-24T23:01:49Z">
      <class name="testLogIn.LogInWithValidCredential">
        <test-method status="PASS" signature="beforeEachTestMethod()[pri:0, instance:testLogIn.LogInWithValidCredential@23bb8443]" name="beforeEachTestMethod" is-config="true" duration-ms="36269" started-at="2020-09-24T19:00:05Z" finished-at="2020-09-24T19:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestMethod -->
        <test-method status="PASS" signature="logInWithValidCredential()[pri:1, instance:testLogIn.LogInWithValidCredential@23bb8443]" name="logInWithValidCredential" duration-ms="709" started-at="2020-09-24T19:00:41Z" finished-at="2020-09-24T19:00:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logInWithValidCredential -->
        <test-method status="PASS" signature="afterEachTestMethod()[pri:0, instance:testLogIn.LogInWithValidCredential@23bb8443]" name="afterEachTestMethod" is-config="true" duration-ms="4323" started-at="2020-09-24T19:00:42Z" finished-at="2020-09-24T19:00:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- testLogIn.LogInWithValidCredential -->
      <class name="testLogIn.SightSeeing">
        <test-method status="PASS" signature="beforeEachTestMethod()[pri:0, instance:testLogIn.SightSeeing@120d6fe6]" name="beforeEachTestMethod" is-config="true" duration-ms="7503" started-at="2020-09-24T19:00:59Z" finished-at="2020-09-24T19:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestMethod -->
        <test-method status="PASS" signature="TestSightSeeing()[pri:3, instance:testLogIn.SightSeeing@120d6fe6]" name="TestSightSeeing" duration-ms="863" started-at="2020-09-24T19:01:06Z" finished-at="2020-09-24T19:01:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSightSeeing -->
        <test-method status="PASS" signature="afterEachTestMethod()[pri:0, instance:testLogIn.SightSeeing@120d6fe6]" name="afterEachTestMethod" is-config="true" duration-ms="4323" started-at="2020-09-24T19:01:07Z" finished-at="2020-09-24T19:01:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="beforeEachTestMethod()[pri:0, instance:testLogIn.SightSeeing@120d6fe6]" name="beforeEachTestMethod" is-config="true" duration-ms="7456" started-at="2020-09-24T19:01:37Z" finished-at="2020-09-24T19:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestMethod -->
        <test-method status="PASS" signature="AirportTransport()[pri:6, instance:testLogIn.SightSeeing@120d6fe6]" name="AirportTransport" duration-ms="829" started-at="2020-09-24T19:01:44Z" finished-at="2020-09-24T19:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AirportTransport -->
        <test-method status="PASS" signature="afterEachTestMethod()[pri:0, instance:testLogIn.SightSeeing@120d6fe6]" name="afterEachTestMethod" is-config="true" duration-ms="4325" started-at="2020-09-24T19:01:45Z" finished-at="2020-09-24T19:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- testLogIn.SightSeeing -->
      <class name="base.Config">
        <test-method status="PASS" signature="startTestSuite()[pri:0, instance:base.Config@3ffcd140]" name="startTestSuite" is-config="true" duration-ms="25" started-at="2020-09-24T19:00:05Z" finished-at="2020-09-24T19:00:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTestSuite -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:base.Config@3ffcd140]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-09-24T19:01:50Z" finished-at="2020-09-24T19:01:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- base.Config -->
      <class name="testLogIn.TestSanitizedBuses">
        <test-method status="PASS" signature="beforeEachTestMethod()[pri:0, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="beforeEachTestMethod" is-config="true" duration-ms="7417" started-at="2020-09-24T19:00:46Z" finished-at="2020-09-24T19:00:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestMethod -->
        <test-method status="PASS" signature="ListYourProperty()[pri:2, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="ListYourProperty" duration-ms="1245" started-at="2020-09-24T19:00:53Z" finished-at="2020-09-24T19:00:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ListYourProperty -->
        <test-method status="PASS" signature="afterEachTestMethod()[pri:0, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="afterEachTestMethod" is-config="true" duration-ms="4143" started-at="2020-09-24T19:00:55Z" finished-at="2020-09-24T19:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="beforeEachTestMethod()[pri:0, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="beforeEachTestMethod" is-config="true" duration-ms="7305" started-at="2020-09-24T19:01:11Z" finished-at="2020-09-24T19:01:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestMethod -->
        <test-method status="PASS" signature="Tours()[pri:4, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="Tours" duration-ms="674" started-at="2020-09-24T19:01:19Z" finished-at="2020-09-24T19:01:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Tours -->
        <test-method status="PASS" signature="afterEachTestMethod()[pri:0, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="afterEachTestMethod" is-config="true" duration-ms="4317" started-at="2020-09-24T19:01:19Z" finished-at="2020-09-24T19:01:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method status="PASS" signature="beforeEachTestMethod()[pri:0, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="beforeEachTestMethod" is-config="true" duration-ms="7510" started-at="2020-09-24T19:01:24Z" finished-at="2020-09-24T19:01:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTestMethod -->
        <test-method status="PASS" signature="Charters()[pri:5, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="Charters" duration-ms="1392" started-at="2020-09-24T19:01:31Z" finished-at="2020-09-24T19:01:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Charters -->
        <test-method status="PASS" signature="afterEachTestMethod()[pri:0, instance:testLogIn.TestSanitizedBuses@1176dcec]" name="afterEachTestMethod" is-config="true" duration-ms="4327" started-at="2020-09-24T19:01:33Z" finished-at="2020-09-24T19:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- testLogIn.TestSanitizedBuses -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
